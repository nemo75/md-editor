{
  "_args": [
    [
      "stringify-object@https://registry.npmjs.org/stringify-object/-/stringify-object-2.3.1.tgz",
      "/home/skynet/Documents/dev/examen/react-elixired"
    ]
  ],
  "_from": "stringify-object@>=2.3.0 <3.0.0",
  "_id": "stringify-object@2.3.1",
  "_inCache": true,
  "_location": "/stringify-object",
  "_phantomChildren": {},
  "_requested": {
    "name": "stringify-object",
    "raw": "stringify-object@https://registry.npmjs.org/stringify-object/-/stringify-object-2.3.1.tgz",
    "rawSpec": "https://registry.npmjs.org/stringify-object/-/stringify-object-2.3.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/stringify-object/-/stringify-object-2.3.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/gulp-debug"
  ],
  "_resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-2.3.1.tgz",
  "_shasum": "574449a1ba11332fdbe23cb9f983d90242cde8ba",
  "_shrinkwrap": null,
  "_spec": "stringify-object@https://registry.npmjs.org/stringify-object/-/stringify-object-2.3.1.tgz",
  "_where": "/home/skynet/Documents/dev/examen/react-elixired",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/yeoman/stringify-object/issues"
  },
  "dependencies": {
    "is-plain-obj": "^1.0.0",
    "is-regexp": "^1.0.0"
  },
  "description": "Stringify an object/array like JSON.stringify just without all the double-quotes",
  "devDependencies": {
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/yeoman/stringify-object#readme",
  "keywords": [
    "object",
    "stringify",
    "pretty",
    "print",
    "dump",
    "format",
    "type",
    "json"
  ],
  "license": "BSD-2-Clause",
  "name": "stringify-object",
  "optionalDependencies": {},
  "readme": "# stringify-object [![Build Status](https://secure.travis-ci.org/yeoman/stringify-object.svg?branch=master)](http://travis-ci.org/yeoman/stringify-object)\n\n> Stringify an object/array like JSON.stringify just without all the double-quotes.\n\nUseful for when you want to get the string representation of an object in a formatted way.\n\nIt also handles circular references and lets you specify quote type.\n\n\n## Install\n\n```\n$ npm install --save stringify-object\n```\n\n\n## Usage\n\n```js\nvar obj = {\n\tfoo: 'bar',\n\t'arr': [1, 2, 3],\n\tnested: { hello: \"world\" }\n};\n\nvar pretty = stringifyObject(obj, {\n\tindent: '  ',\n\tsingleQuotes: false\n});\n\nconsole.log(pretty);\n/*\n{\n\tfoo: \"bar\",\n\tarr: [\n\t\t1,\n\t\t2,\n\t\t3\n\t],\n\tnested: {\n\t\thello: \"world\"\n\t}\n}\n*/\n```\n\n\n## API\n\n### stringifyObject(input, [options])\n\nCircular references will be replaced with `\"[Circular]\"`.\n\n#### input\n\n*Required*  \nType: `object`, `array`\n\n#### options\n\n##### indent\n\nType: `string`  \nDefault: `'\\t'`\n\nChoose the indentation you prefer.\n\n##### singleQuotes\n\nType: `boolean`  \nDefault: `true`\n\nSet to false to get double-quoted strings.\n\n##### filter(obj, prop)\n\nType: `function`\n\nExpected to return a boolean of whether to keep the object.\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php) and copyright Google\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yeoman/stringify-object.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.3.1"
}
