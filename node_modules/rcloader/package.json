{
  "_args": [
    [
      "rcloader@https://registry.npmjs.org/rcloader/-/rcloader-0.1.2.tgz",
      "/home/skynet/Documents/dev/examen/react-elixired"
    ]
  ],
  "_from": "rcloader@0.1.2",
  "_id": "rcloader@0.1.2",
  "_inCache": true,
  "_location": "/rcloader",
  "_phantomChildren": {},
  "_requested": {
    "name": "rcloader",
    "raw": "rcloader@https://registry.npmjs.org/rcloader/-/rcloader-0.1.2.tgz",
    "rawSpec": "https://registry.npmjs.org/rcloader/-/rcloader-0.1.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/rcloader/-/rcloader-0.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/gulp-jshint"
  ],
  "_resolved": "https://registry.npmjs.org/rcloader/-/rcloader-0.1.2.tgz",
  "_shasum": "a0963a6437d09ef8cb92d932d2dad497b0d1736c",
  "_shrinkwrap": null,
  "_spec": "rcloader@https://registry.npmjs.org/rcloader/-/rcloader-0.1.2.tgz",
  "_where": "/home/skynet/Documents/dev/examen/react-elixired",
  "author": {
    "name": "Spencer Alger"
  },
  "bugs": {
    "url": "https://github.com/spenceralger/rcloader/issues"
  },
  "dependencies": {
    "lodash": "~2.4.1",
    "rcfinder": "~0.1.6"
  },
  "description": "For build system plugins that need to fetch relative config files (like .jshintrc).",
  "devDependencies": {
    "mocha": "~1.17.1",
    "should": "~3.1.2"
  },
  "homepage": "https://github.com/spenceralger/rcloader",
  "keywords": [
    "find",
    "rcfile",
    "rc",
    "search",
    "defaults",
    "config"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "rcloader",
  "optionalDependencies": {},
  "readme": "# rcloader\n\n[![Travis CI](https://travis-ci.org/spenceralger/rcloader.png)](https://travis-ci.org/spenceralger/rcloader)\n\nFor build system plugins that need to fetch relative config files (like .jshintrc).\n\n## Features\n  - Find the closest config file (like .jshintrc) relative to the file you are linting\n  - Lookups are cahched to limit IO operations\n  - Accepts input directly from plugin consumers to\n    - specifiy a file that should always be used\n    - specify overrides\n    - disable file lookup\n\n## Install\n```\nnpm install rcloader\n```\n\n## Use\nThis plugin was written to specifcally address this issue for a couple gulp plugins.\n\n### within a gulp plugin\n```\nvar RcLoader = require('rcloader');\nvar map = require('map-stream');\n\nmodule.exports = function MyGulpPlugin(options) {\n  var rcLoader = new RcFinder('.configfilename', options);\n\n  return map(function (file, cb) {\n    // get the options for this file specifically\n    rcLoader.for(file.path, function (err, fileOpts) {\n      // do something cool\n\n      // send the file along\n      cb(null, file);\n    });\n  });\n};\n```\n\nIf you would rather, just skip the callback and it will run synchronously.\n```\nvar fileOpts = rcLoader.for(file.path, options);\n```\n\n## Options\nThe second argument to the `RcFinder` constructor should be the options that plugin consumers define, and they can take can take a few different forms.\n\n**If the user specifies a string**, it is used as a path to the only config file that they care about. Calling `rcLoader.for(path)` will always return a copy of the config file at that path.\n\n**If the user specifies an object**, the following keys will be striped from it and the remaining values will override values found in the config files.\n\n - `lookup`, Boolean, Find the closest config file each time `.for()` is called. default is true, unless config is a path.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/spenceralger/rcloader.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.1.2"
}
